@model IEnumerable<AplicatieCamine.Models.Tichet>
@using System.Text.Json;
@{
	ViewData["Title"] = "Index";
	var serializer = Json.Serialize(Model);
	var filtered = Json.Serialize(Model.Where(entry => entry.StatusTichet == false));
	var important = Json.Serialize(Model.Where(entry => entry.TipTichet == true));
	var importantNerezolvat = Json.Serialize(Model.Where(entry => (entry.TipTichet == true) && (entry.StatusTichet == false)));

}

<link rel="stylesheet" href="~/css/styleTable.css">

<style>
	main {
		flex-direction: column;
	}

	.create_button {
		border: none;
		color: white;
		background-color: #008CBA;
		padding: 5px 15px;
		text-align: center;
		text-decoration: none;
		font-size: 16px;
		cursor: pointer;
		transition-duration: 0.6s;
		margin: 5px 0 5px 10px;
	}
</style>

@section Scripts{

	<script>
        $(document).ready(function () {
            content = $("#tichet_body");
            $("#filterTichets").prop("checked", true);

            filtered_objects = {
                "normal" : {
                    "lista" : @serializer,
                    "pagina" : 1,
                    "pozitie" : 0
                }, 
                "nerezolvat" : {
                    "lista" : @filtered,
                    "pagina" : 1,
                    "pozitie" : 0
                },
                "important" : {
                    "lista" : @important,
                    "pagina" : 1,
                    "pozitie" : 0
                },
                "important_nerezolvat" : {
                    "lista" : @importantNerezolvat,
                    "pagina" : 1,
                    "pozitie" : 0
                }
            }

            imprez();

            $("#filterTichets").click(function (event) {
                imprez();
            });

            $("#impTichets").click(function (event) {
                imprez();
		    });

            $("#more").click(function (event) {
                loadMore();
            });

            $("#less").click(function (event) {
                loadLess();
            });

            $("#find_tichet_by_id").change(function (event) {
                $("#tempRow").empty();
                $("#more").css({ "display": "none" });
				$("#less").css({ "display": "none" });
				$("#tempRow").css({ "display": "none" });
                if ($("#find_tichet_by_id").val() != 0) {
					hideRows(parseInt($("#find_tichet_by_id").val()));
                } else {
                    showRows();
				}
            });
		});

        function imprez() {
			$("#tempRow").empty();
            if (($("#impTichets").is(":checked")) && ($("#filterTichets").is(":checked"))) {
                current_object = "important_nerezolvat";//filtered_objects["important_nerezolvat"];
            } else if (($("#impTichets").is(":checked")) && (!($("#filterTichets").is(":checked")))) {
                current_object = "important"; // filtered_objects["important"];
            } else if ((!($("#impTichets").is(":checked"))) && ($("#filterTichets").is(":checked"))) {
                current_object = "nerezolvat";//filtered_objects["nerezolvat"];
            } else {
                current_object = "normal";//filtered_objects["normal"];
            }
            listaTichete = filtered_objects[current_object]["lista"];
            filtered_objects[current_object]["pozitie"] = (filtered_objects[current_object]["pagina"] - 1) * 6;
            console.log("pagina in imprez: " + filtered_objects[current_object]["pagina"]);
            loadInitial();
        }

        function emptyContent(){
            var childs = content.children();
            for(var i = childs.length - 1; i > 0; i--){
                childs[i].remove();
            }
        }

        function loadInitial(){
            emptyContent();
            console.log("pagina in loadInitial: " + filtered_objects[current_object]["pagina"]);
            if(filtered_objects[current_object]["pagina"] <= 1) { 
                $("#less").css({ "display": "none" });
            } else {
                if(document.getElementById("less").style.display == "none"){
                    $("#less").css({ "display": "inline-block" });
                }
            }

            var pana_la = (filtered_objects[current_object]["pozitie"] + 6 < listaTichete.length ? filtered_objects[current_object]["pozitie"] + 6 : listaTichete.length);
            for (j = filtered_objects[current_object]["pozitie"]; j < pana_la; j++) {
                content.append(displayTichet(listaTichete[j]));
                filtered_objects[current_object]["pozitie"]++;
            }
            if (listaTichete.length == pana_la) {
                $("#more").css({ "display": "none" });
            } else {
				$("#more").css({ "display": "inline-block" });
			}
        }

        function loadMore() {
			emptyContent();
            filtered_objects[current_object]["pagina"] += 1;
            console.log("pagina in loadMore: " + filtered_objects[current_object]["pagina"]);
			if (filtered_objects[current_object]["pagina"] > 1) {
				$("#less").css({ "display": "inline-block" });
			}
			var pana_la = (filtered_objects[current_object]["pozitie"] + 6 < listaTichete.length ? filtered_objects[current_object]["pozitie"] + 6 : listaTichete.length);
			for (j = filtered_objects[current_object]["pozitie"]; j < pana_la; j++) {
				content.append(displayTichet(listaTichete[j]));
				filtered_objects[current_object]["pozitie"] += 1;
			}
            if(pana_la == listaTichete.length){
                $("#more").css({ "display": "none" });
            }
        }

        function loadLess() {
            emptyContent();
            filtered_objects[current_object]["pagina"] -= 1;
            console.log("pagina in loadLess: " + filtered_objects[current_object]["pagina"]);
            if(filtered_objects[current_object]["pagina"] <= 1) { 
                $("#less").css({ "display": "none" });
            }

            var pana_la = (filtered_objects[current_object]["pozitie"] - 6 > 0 ? filtered_objects[current_object]["pozitie"] - 6 : 0);
            if(pana_la == 0){
                $("#less").css({ "display": "none" });
            }
            var de_la = pana_la - 6;
            for (var j = de_la; j < pana_la; j++) {
                content.append(displayTichet(listaTichete[j]));
                filtered_objects[current_object]["pozitie"] -= 1;
            }
            if(listaTichete.length != filtered_objects[current_object]["pozitie"]){
                $("#more").css({ "display": "inline-block" });
            }
        }

        function displayTichet(tichet) {
            statusTichet = (tichet["statusTichet"] === false ? "<b style=\"color:red;\"> NEREZOLVAT </b>" : "<b style=\"color:green;\"> REZOLVAT </b>");
            important = (tichet["tipTichet"] === false ? "<b style=\"color:red;\"> NU </b>" : "<b style=\"color:green;\"> DA </b>");
            row = "<tr>";
            row += "<td>" + tichet.idTichet + "</td>";
            row += "<td>" + tichet.dataEmitere.substr(0, 9) + "</td>";
            row += "<td>" + (tichet.dateRezolvare != null ? tichet.dateRezolvare.substr(0, 9) : "-----") + "</td>";
            row += "<td>" + statusTichet + "</td>";
            row += "<td>" + tichet.detalii + "</td>";
            row += "<td>" + important + "</td>";
            row += "<td>" + tichet.idStudent + "</td>";
            row += "<td>" + tichet.idCamera + "</td>";
            row += "<td>" + (tichet.feedback != null ? tichet.feedback : "<u> Niciun feedback! </u>") + "</td>";
            row += "<td>" + (tichet.filename != null ? tichet.filename : "<i> Fără poză! </i>") + "</td>";
            row += "<td><a href=\"/Tichet/Edit/" + tichet.idTichet + "\">Editează</a> | ";
            row += "<a href=\"/Tichet/Details/" + tichet.idTichet + "\">Detalii</a> | ";
            row += "<a href=\"/Tichet/Delete/" + tichet.idTichet + "\">Șterge</a> </td> </tr>";
            return row;
        }


        function hideRows(tichet_id) {
            var c = content.children();
            var [f1, ...childs] = c;
            var found = false;
            for (var pos = 0; pos < childs.length; pos++) {
                var id = parseInt(childs[pos].children[0].innerText);
                if (id != tichet_id) {
                    childs[pos].style.display = "none";
                } else {
                    found = true;
				}
            }
            if (!found) {
                temprowContent = findTichet(tichet_id);
                if(temprowContent != undefined){
                    temprowContent = displayTichet(temprowContent);
                    $("#tempRow").append(temprowContent.substr(4, temprowContent.length - 5));
                    $("#tempRow").css({ "display": "table-row" });
                }
			}
        }

        function showRows() {
            var childs = content.children();
			for (var pos = 0; pos < childs.length; pos++) {
				childs[pos].style.display = "table-row";
            }
            $("#tempRow").css({ "display": "none" });

            if (filtered_objects[current_object]["pagina"] > 1) {
				$("#less").css({ "display": "inline-block" });
            } else {
                $("#less").css({ "display": "none" });
            }

            if (filtered_objects[current_object]["pozitie"] != listaTichete.length) {
				$("#more").css({ "display": "inline-block" });
			} else {
                $("#more").css({ "display": "none" });
            }
        }

        function findTichet(id) {
            for (var pos = 0; pos < listaTichete.length; pos++) {
                if (listaTichete[pos].idTichet == id) {
                    return listaTichete[pos];
				}
			}
		}
	</script>

}

<div class="container-fluid d-flex justify-content-center mb-auto">
	<div class="card">
		<div class="card-header header-elements-inline">
			<h5 style="font-family:Garamond,serif; font-size: 40px">Tichet</h5>
			<div class="mb-2">
				<label for="tichet_finder">Caută după ID Tichet: </label>
				<input type="number" min="0" max="@Model.Count()" id="find_tichet_by_id" name="tichet_finder" value="0" />
				<label for="checker">Importante:  </label> <input type="checkbox" name="checker" id="impTichets" />
				<label for="checker">Nerezolvate:  </label> <input type="checkbox" name="checker" id="filterTichets" />
				<a asp-action="Create" class="create_button">Adaugă!</a>
				<a asp-controller="Home" asp-action="Index" class="create_button">Înapoi</a>
			</div>
		</div>

		<div class="table-responsive">

			<table class="table table-hover">
				<thead>
					<tr>
						<th>
							ID Tichet
						</th>
						<th>
							Data Emiterii
						</th>
						<th>
							Data Rezolvare
						</th>
						<th>
							Rezolvat?
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Detalii)
						</th>
						<th>
							Important?
						</th>
						<th>
							ID Student
						</th>
						<th>
							ID Cameră
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Feedback)
						</th>
						<th>
							Poză
						</th>
						<th></th>
						<th></th>
					</tr>
				</thead>
				<tbody id="tichet_body">
					<tr id="tempRow" style="display: none;"></tr>
				</tbody>
			</table>
		</div>
	</div>
</div>
<div class="mx-auto mt-2" id="page_controller_buttons">
	<svg id="less" xmlns="http://www.w3.org/2000/svg" width="55" height="55" fill="#008CBA" class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
		<path d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z" />
	</svg>
	<svg id="more" xmlns="http://www.w3.org/2000/svg" width="55" height="55" fill="#008CBA" class="bi bi-arrow-right-circle-fill" viewBox="0 0 16 16">
		<path d="M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z" />
	</svg>
</div>
